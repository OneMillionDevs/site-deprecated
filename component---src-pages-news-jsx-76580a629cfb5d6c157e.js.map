{"version":3,"sources":["webpack:///./src/pages/news.jsx"],"names":["pageQuery","BlogIndex","posts","data","allMdx","edges","A","Box","color","gradient","py","textCenter","Flex","between","px","Heading","lg","heavy","Button","xs","variant","Container","xl","as","HorizontalRule","xxl","mt","maxWidth","filter","node","frontmatter","template","map","post","alignEnd","p","mb","minHeight","BackgroundImage","ratio","src","imageCover","opacity","to","fields","slug","noMargin","title","md","tagline","card","my","key","id","Paragraph","sm","summary","excerpt","flex"],"mappings":"2FAAA,mGAsGaA,EAAS,aAsBPC,UAxHG,SAAC,GAAc,IAChBC,EADe,EAAXC,KACWC,OAAtBC,MAER,OACE,kBAAC,OAAD,KACE,kBAACC,EAAEC,IAAH,CAAOC,MAAM,QAAQC,SAAS,WAAWC,GAAI,EAAGC,YAAU,GACxD,kBAACL,EAAEM,KAAH,CAAQC,SAAO,EAACC,GAAI,GAClB,kBAACR,EAAES,QAAH,CAAWC,IAAE,EAACC,OAAK,GAAnB,QAGA,kBAACX,EAAEY,OAAH,CAAUC,IAAE,EAACC,QAAQ,SAArB,iBAMJ,kBAACd,EAAEe,UAAH,CAAaX,GAAI,GACf,kBAACJ,EAAEC,IAAH,CAAOI,YAAU,EAACD,GAAI,GACpB,kBAACJ,EAAES,QAAH,CAAWO,IAAE,EAACL,OAAK,GAAnB,gBAGA,kBAACX,EAAES,QAAH,CAAWQ,GAAG,MAAd,mEAIF,kBAACjB,EAAEkB,eAAH,OAGF,kBAAClB,EAAEe,UAAH,CAAaX,GAAI,GACf,kBAACJ,EAAEC,IAAH,CAAOI,YAAU,EAACD,GAAI,GACpB,kBAACJ,EAAES,QAAH,CAAWO,IAAE,EAACL,OAAK,GAAnB,+BAGA,kBAACX,EAAES,QAAH,CAAWQ,GAAG,MAAd,uDAGA,kBAACjB,EAAES,QAAH,CAAWU,KAAG,EAACR,OAAK,EAACS,GAAI,GAAzB,gBAIF,kBAACpB,EAAEkB,eAAH,OAGF,kBAAClB,EAAEe,UAAH,CAAaX,GAAI,GACf,kBAACJ,EAAEC,IAAH,CAAOI,YAAU,EAACD,GAAI,GACpB,kBAACJ,EAAES,QAAH,CAAWO,IAAE,EAACL,OAAK,GAAnB,sBAGA,kBAACX,EAAES,QAAH,CAAWQ,GAAG,MAAd,oEAIJ,kBAACjB,EAAEe,UAAH,CAAaM,SAAU,IAAKjB,GAAI,GAC7BR,EACE0B,QAAO,kBAAkD,SAAlD,EAAGC,KAAsBC,YAAYC,YAC5CC,KAAI,gBAASC,EAAT,EAAGJ,KAAH,OACH,oCACE,kBAACvB,EAAEM,KAAH,CACEsB,UAAQ,EACR1B,MAAM,QACNC,SAAS,WACT0B,EAAG,EACHC,GAAI,EACJV,GAAI,EACJW,UAAW,KAEX,kBAAC/B,EAAEgC,gBAAH,CACEC,MAAO,GACPC,IAAKP,EAAKH,YAAYW,WACtBC,QAAS,KAEX,kBAAC,OAAD,CAAMC,GAAIV,EAAKW,OAAOC,MACpB,kBAACvC,EAAES,QAAH,CAAWQ,GAAG,KAAKuB,UAAQ,EAACxB,IAAE,EAACL,OAAK,GACjCgB,EAAKH,YAAYiB,OAEpB,kBAACzC,EAAES,QAAH,CAAWQ,GAAG,KAAKyB,IAAE,GAClBf,EAAKH,YAAYmB,WAIxB,kBAAC3C,EAAEC,IAAH,CAAO2C,MAAI,EAACC,GAAI,EAAGC,IAAKnB,EAAKoB,IAC3B,kBAAC/C,EAAEgD,UAAH,CAAaC,IAAE,GACZtB,EAAKH,YAAY0B,SAAWvB,EAAKwB,SAEpC,kBAACnD,EAAEM,KAAH,CAAQC,SAAO,EAAC6C,KAAM,EAAGhC,GAAI,GAC3B,kBAAC,OAAD,CAAMiB,GAAIV,EAAKW,OAAOC,MACpB,kBAACvC,EAAEY,OAAH,CAAUqC,IAAE,EAACnC,QAAQ,SAArB,4B","file":"component---src-pages-news-jsx-76580a629cfb5d6c157e.js","sourcesContent":["import React from \"react\"\nimport { Site } from \"templates\"\n\nimport { Link, graphql } from \"gatsby\"\nconst BlogIndex = ({ data }) => {\n  const { edges: posts } = data.allMdx\n\n  return (\n    <Site>\n      <A.Box color=\"white\" gradient=\"blueDark\" py={4} textCenter>\n        <A.Flex between px={4}>\n          <A.Heading lg heavy>\n            News\n          </A.Heading>\n          <A.Button xs variant=\"green\">\n            Add Article\n          </A.Button>\n        </A.Flex>\n      </A.Box>\n\n      <A.Container py={0}>\n        <A.Box textCenter py={5}>\n          <A.Heading xl heavy>\n            In The Media\n          </A.Heading>\n          <A.Heading as=\"h4\">\n            Mentions of the One Million Developers initiative in the media\n          </A.Heading>\n        </A.Box>\n        <A.HorizontalRule />\n      </A.Container>\n\n      <A.Container py={0}>\n        <A.Box textCenter py={5}>\n          <A.Heading xl heavy>\n            One Million Developers Blog\n          </A.Heading>\n          <A.Heading as=\"h4\">\n            Articles written by the One Million Developers team\n          </A.Heading>\n          <A.Heading xxl heavy mt={5}>\n            COMING SOON\n          </A.Heading>\n        </A.Box>\n        <A.HorizontalRule />\n      </A.Container>\n\n      <A.Container py={0}>\n        <A.Box textCenter py={5}>\n          <A.Heading xl heavy>\n            Ecosystem Material\n          </A.Heading>\n          <A.Heading as=\"h4\">Useful articles and videos published by the Ethereum community</A.Heading>\n        </A.Box>\n      </A.Container>\n\n      <A.Container maxWidth={780} py={4}>\n        {posts\n          .filter(({ node: post }) => post.frontmatter.template === \"news\")\n          .map(({ node: post }) => (\n            <>\n              <A.Flex\n                alignEnd\n                color=\"white\"\n                gradient=\"blueDark\"\n                p={3}\n                mb={3}\n                mt={5}\n                minHeight={250}\n              >\n                <A.BackgroundImage\n                  ratio={0.2}\n                  src={post.frontmatter.imageCover}\n                  opacity={0.3}\n                />\n                <Link to={post.fields.slug}>\n                  <A.Heading as=\"h2\" noMargin xl heavy>\n                    {post.frontmatter.title}\n                  </A.Heading>\n                  <A.Heading as=\"h5\" md>\n                    {post.frontmatter.tagline}\n                  </A.Heading>\n                </Link>\n              </A.Flex>\n              <A.Box card my={2} key={post.id}>\n                <A.Paragraph sm>\n                  {post.frontmatter.summary || post.excerpt}\n                </A.Paragraph>\n                <A.Flex between flex={1} mt={3}>\n                  <Link to={post.fields.slug}>\n                    <A.Button sm variant=\"white\">\n                      Read Coverage\n                    </A.Button>\n                  </Link>\n                </A.Flex>\n              </A.Box>\n            </>\n          ))}\n      </A.Container>\n    </Site>\n  )\n}\nexport const pageQuery = graphql`\n  query newsIndex {\n    allMdx {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            tagline\n            template\n            summary\n            image\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\nexport default BlogIndex\n"],"sourceRoot":""}